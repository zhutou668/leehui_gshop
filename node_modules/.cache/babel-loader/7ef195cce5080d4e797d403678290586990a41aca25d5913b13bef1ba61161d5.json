{"ast":null,"code":"import { mapActions } from 'vuex';\nimport { mapState } from 'vuex';\nimport AppHeaderTop from \"../../components/HeaderTop/AppHeaderTop.vue\";\nimport Swiper from 'swiper';\nimport \"swiper/./css/swiper.css\";\nexport default {\n  name: 'AppMsite',\n  components: {\n    AppHeaderTop\n  },\n  mounted() {\n    //   this.$store.dispatch('getPosts')\n    //   console.log(this.posts)\n    // this.$store.dispatch('getProfile')\t\n    this.getCatergorys();\n    this.getAddress();\n    new Swiper('.swiper', {\n      direction: 'vertical',\n      // 垂直切换选项\n      loop: true,\n      // 循环模式选项\n\n      // 如果需要分页器\n      pagination: {\n        el: '.swiper-pagination'\n      },\n      // 如果需要前进后退按钮\n      navigation: {\n        nextEl: '.swiper-button-next',\n        prevEl: '.swiper-button-prev'\n      },\n      // 如果需要滚动条\n      scrollbar: {\n        el: '.swiper-scrollbar'\n      }\n    });\n  },\n  methods: {\n    ...mapActions(['getCatergorys', 'getAddress'])\n  },\n  computed: {\n    ...mapState(['address', 'catergorys'])\n  }\n};","map":{"version":3,"names":["mapActions","mapState","AppHeaderTop","Swiper","name","components","mounted","getCatergorys","getAddress","direction","loop","pagination","el","navigation","nextEl","prevEl","scrollbar","methods","computed"],"sources":["src/pages/Msite/AppMsite.vue"],"sourcesContent":["<template>\n    <div class=\"AppMsite\">\n      <AppHeaderTop :title=\"address.address\">\n      <span class=\"header_left\" slot=\"header_left\"><font-awesome-icon icon=\"fa-solid fa-magnifying-glass\" size:50px/></span>\n      <span class=\"header_right\" slot=\"header_right\">登录/注册</span>\n      </AppHeaderTop>\n      <div class=\"Msite_Menu\">\n         <div class=\"swiper\">\n            <div class=\"swiper-wrapper\">\n               <div class=\"swiper-slide\">Slide 1</div>\n               <div class=\"swiper-slide\">Slide 2</div>\n               <div class=\"swiper-slide\">Slide 3</div>\n            </div>\n            <!-- 如果需要分页器 -->\n            <div class=\"swiper-pagination\"></div>\n            \n            <!-- 如果需要导航按钮 -->\n            <div class=\"swiper-button-prev\"></div>\n            <div class=\"swiper-button-next\"></div>\n            \n            <!-- 如果需要滚动条 -->\n            <div class=\"swiper-scrollbar\"></div>\n         </div>\n       </div>\n   </div>\n  </template>\n  \n  <script>\n   \n   import {mapActions} from 'vuex'\n   import {mapState} from 'vuex'\n   import AppHeaderTop from \"../../components/HeaderTop/AppHeaderTop.vue\"\n\n   import Swiper from 'swiper'\n   import \"swiper/./css/swiper.css\"\n\n   export default {\n      name: 'AppMsite',\n      components:{\n         AppHeaderTop\n      },\n       mounted() {\n      //   this.$store.dispatch('getPosts')\n      //   console.log(this.posts)\n      // this.$store.dispatch('getProfile')\t\n      this.getCatergorys();\n      this.getAddress();  \n\n               new Swiper ('.swiper', {\n            direction: 'vertical', // 垂直切换选项\n            loop: true, // 循环模式选项\n            \n            // 如果需要分页器\n            pagination: {\n               el: '.swiper-pagination',\n            },\n            \n            // 如果需要前进后退按钮\n            navigation: {\n               nextEl: '.swiper-button-next',\n               prevEl: '.swiper-button-prev',\n            },\n            \n            // 如果需要滚动条\n            scrollbar: {\n               el: '.swiper-scrollbar',\n            },\n         })        \n       },\n\n      methods: {\n         ...mapActions(['getCatergorys','getAddress']),\n\n      },\n      computed: {\n         ...mapState(['address','catergorys'])\n      }\n   }\n \n  </script>\n  \n<style scoped>\n\n</style>\n  "],"mappings":"AA6BA,SAAAA,UAAA;AACA,SAAAC,QAAA;AACA,OAAAC,YAAA;AAEA,OAAAC,MAAA;AACA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAH;EACA;EACAI,QAAA;IACA;IACA;IACA;IACA,KAAAC,aAAA;IACA,KAAAC,UAAA;IAEA,IAAAL,MAAA;MACAM,SAAA;MAAA;MACAC,IAAA;MAAA;;MAEA;MACAC,UAAA;QACAC,EAAA;MACA;MAEA;MACAC,UAAA;QACAC,MAAA;QACAC,MAAA;MACA;MAEA;MACAC,SAAA;QACAJ,EAAA;MACA;IACA;EACA;EAEAK,OAAA;IACA,GAAAjB,UAAA;EAEA;EACAkB,QAAA;IACA,GAAAjB,QAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}